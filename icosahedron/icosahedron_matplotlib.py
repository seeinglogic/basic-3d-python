# generated by chat
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d.art3d import Poly3DCollection

# Golden ratio
phi = (1 + np.sqrt(5)) / 2

# Vertices of a regular icosahedron
vertices = np.array([
    [-1, phi, 0],
    [1, phi, 0],
    [-1, -phi, 0],
    [1, -phi, 0],
    [0, -1, phi],
    [0, 1, phi],
    [0, -1, -phi],
    [0, 1, -phi],
    [phi, 0, -1],
    [phi, 0, 1],
    [-phi, 0, -1],
    [-phi, 0, 1]
])

# Faces of the icosahedron
faces = [
    [0, 11, 5], [0, 5, 1], [0, 1, 7], [0, 7, 10], [0, 10, 11],
    [1, 5, 9], [5, 11, 4], [11, 10, 2], [10, 7, 6], [7, 1, 8],
    [3, 9, 4], [3, 4, 2], [3, 2, 6], [3, 6, 8], [3, 8, 9],
    [4, 9, 5], [2, 4, 11], [6, 2, 10], [8, 6, 7], [9, 8, 1]
]

# Create the 3D plot
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')


# Plot the faces
poly3d = [[[vertices[index] for index in face] for face in faces]]
ax.add_collection3d(
    Poly3DCollection(
        poly3d[0],
        linewidths=1,
        facecolors='blue',
        edgecolors='lightblue',
        alpha=0.7
    )
)

# Plot the vertices
ax.scatter(vertices[:, 0], vertices[:, 1], vertices[:, 2], color='black')

# Ensure the axes are scaled equally to prevent distortion
max_radius = np.max(np.abs(vertices)) + 0.5
ax.set_xlim([-max_radius, max_radius])
ax.set_ylim([-max_radius, max_radius])
ax.set_zlim([-max_radius, max_radius])
ax.set_aspect('auto')

plt.show()